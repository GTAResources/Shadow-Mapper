/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainForm.java
 *
 * Created on 12-aug-2009, 13:18:30
 */

package nl.shadowlink.shadowmapper;

import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import nl.shadowlink.shadowgtalib.ide.IDE;
import nl.shadowlink.shadowgtalib.ipl.IPL;
import nl.shadowlink.shadowgtalib.model.model.Vector3D;
import nl.shadowlink.shadowgtalib.utils.Filter;
import nl.shadowlink.shadowgtalib.utils.HashUtils;
import nl.shadowlink.shadowgtalib.utils.Utils;
import nl.shadowlink.shadowmapper.checkList.CheckListManager;
import nl.shadowlink.shadowmapper.constants.Constants;
import nl.shadowlink.shadowmapper.forms.FormSelect;
import nl.shadowlink.shadowmapper.forms.FormSelect.SelectCallbacks;
import nl.shadowlink.shadowmapper.render.GLListener.FPSListener;
import nl.shadowlink.shadowmapper.render.camera.Camera.CameraUpdatedListener;
import nl.shadowlink.shadowmapper.render.camera.FreeCamera;
import nl.shadowlink.shadowmapper.render.GLListener;
import com.jogamp.opengl.awt.GLCanvas;
import com.jogamp.opengl.util.Animator;
import com.nikhaldimann.inieditor.IniEditor;

/**
 * @author Kilian
 */
public class MainForm extends JFrame implements SelectCallbacks, CameraUpdatedListener, FPSListener {

	/** Animator used to refresh the GLCanvas */
	private Animator mCanvasAnimator;
	public GLListener mGLListener = new GLListener();

	private CheckListManager mCheckList;

	public FileManager mFileManager;

	/** Creates new form MainForm */
	public MainForm() {
		setIconImage(Toolkit.getDefaultToolkit().createImage("icon.png"));

		initComponents();

		setExtendedState(Frame.MAXIMIZED_BOTH);

		mCanvasAnimator = new Animator(gLCanvas1);
		mCanvasAnimator.start();
		mGLListener.setFPSListener(this);

		// Setup camera
		FreeCamera freeCamera = new FreeCamera(0, 2, 5, 0, 2.5f, 0, 0, 1, 0);
		freeCamera.setCameraUpdatedListener(this);
		gLCanvas1.addKeyListener(freeCamera);
		gLCanvas1.addMouseMotionListener(freeCamera);
		gLCanvas1.addMouseListener(freeCamera);
		mGLListener.setCamera(freeCamera);

		// Show window
		setVisible(true);

		// Stop window animator when the window gets closed
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				mCanvasAnimator.stop();
				System.exit(0);
			}
		});

		// Show select install form
		new FormSelect(this);
	}

	/**
	 * Called when the Select install menu button is clicked
	 */
	private void onSelectInstallClicked() {
		new FormSelect(this);
	}

	@Override
	public void onInstallLoaded(final FileManager pFileManager) {
		mFileManager = pFileManager;
		mCheckList.setFileManager(pFileManager);
		mGLListener.setFileManager(pFileManager);
		updateModels(pFileManager);
	}

	/**
	 * Updates the models in the lists
	 * 
	 * @param pFileManager
	 *        FileManager where the models are defined
	 */
	private void updateModels(final FileManager pFileManager) {
		listScene.setModel(pFileManager.modelIPL);
		listIPL.setModel(pFileManager.modelIPL);
		listIPLItems.setModel(pFileManager.modelIPLItems);
		jList2.setModel(pFileManager.modelIDE);
		listIDEItems.setModel(pFileManager.modelIDEItems);
	}

	@Override
	public void onCameraMoved(final Vector3D pPosition) {
		mTextFieldCameraX.setText(String.format("%.2f", pPosition.getX()));
		mTextFieldCameraY.setText(String.format("%.2f", pPosition.getY()));
		mTextFieldCameraZ.setText(String.format("%.2f", pPosition.getZ()));
	}

	@Override
	public void onFPSUpdated(final float pFPS) {
		labelFPS.setText("FPS: " + pFPS);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		buttonGroup1 = new javax.swing.ButtonGroup();
		gLCanvas1 = new GLCanvas();
		listIDE = new javax.swing.JTabbedPane();
		panelRender = new javax.swing.JPanel();
		jButton1 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		listScene = new javax.swing.JList();
		jPanel3 = new javax.swing.JPanel();
		checkCars = new javax.swing.JCheckBox();
		checkZones = new javax.swing.JCheckBox();
		checkWater = new javax.swing.JCheckBox();
		checkMap = new javax.swing.JCheckBox();
		jCheckBox1 = new javax.swing.JCheckBox();
		panelIPL = new javax.swing.JPanel();
		jScrollPane4 = new javax.swing.JScrollPane();
		listIPL = new javax.swing.JList();
		jButton9 = new javax.swing.JButton();
		jButton10 = new javax.swing.JButton();
		buttonNewIPLItem = new javax.swing.JButton();
		buttonEditIPLItem = new javax.swing.JButton();
		buttonDeleteIPLItem = new javax.swing.JButton();
		jScrollPane5 = new javax.swing.JScrollPane();
		listIPLItems = new javax.swing.JList();
		comboIPLType = new javax.swing.JComboBox();
		panelIDE = new javax.swing.JPanel();
		jScrollPane2 = new javax.swing.JScrollPane();
		jList2 = new javax.swing.JList();
		jButton3 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();
		buttonNewIDEItem = new javax.swing.JButton();
		buttonDelIDEItem = new javax.swing.JButton();
		buttonEditIDEItem = new javax.swing.JButton();
		jScrollPane3 = new javax.swing.JScrollPane();
		listIDEItems = new javax.swing.JList();
		panelMapper = new javax.swing.JPanel();
		jPanel1 = new javax.swing.JPanel();
		labelModelName = new javax.swing.JLabel();
		labelTextureName = new javax.swing.JLabel();
		labelLodName = new javax.swing.JLabel();
		textTextureName = new javax.swing.JTextField();
		textLODName = new javax.swing.JTextField();
		textModelName = new javax.swing.JTextField();
		buttonSelectModel = new javax.swing.JButton();
		buttonSelectModel1 = new javax.swing.JButton();
		buttonSelectModel2 = new javax.swing.JButton();
		jPanel2 = new javax.swing.JPanel();
		labelPosition = new javax.swing.JLabel();
		labelRotation = new javax.swing.JLabel();
		spinnerRotX = new javax.swing.JSpinner();
		spinnerPosX = new javax.swing.JSpinner();
		spinnerPosY = new javax.swing.JSpinner();
		spinnerRotY = new javax.swing.JSpinner();
		spinnerPosZ = new javax.swing.JSpinner();
		spinnerRotZ = new javax.swing.JSpinner();
		jPanel4 = new javax.swing.JPanel();
		jButton6 = new javax.swing.JButton();
		jButton7 = new javax.swing.JButton();
		jButton8 = new javax.swing.JButton();
		labelFPS = new javax.swing.JLabel();
		labelCameraPosition = new javax.swing.JLabel();
		mTextFieldCameraX = new javax.swing.JTextField();
		mTextFieldCameraY = new javax.swing.JTextField();
		mTextFieldCameraZ = new javax.swing.JTextField();
		jToggleButton1 = new javax.swing.JToggleButton();
		jToggleButton2 = new javax.swing.JToggleButton();
		jToggleButton3 = new javax.swing.JToggleButton();
		jButton2 = new javax.swing.JButton();
		jButton5 = new javax.swing.JButton();
		jMenuBar1 = new javax.swing.JMenuBar();
		jMenu1 = new javax.swing.JMenu();
		jMenuItem4 = new javax.swing.JMenuItem();
		jMenuItem3 = new javax.swing.JMenuItem();
		jMenu2 = new javax.swing.JMenu();
		jMenuItem2 = new javax.swing.JMenuItem();
		jMenuItem5 = new javax.swing.JMenuItem();
		jMenuTools = new JMenu();
		jMenuToolsItemHashGenerator = new JMenuItem();
		jMenu3 = new javax.swing.JMenu();
		jMenuItem1 = new javax.swing.JMenuItem();
		jMenuItemSelectInstall = new javax.swing.JMenuItem();

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		setTitle("Shadow Mapper");
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				formWindowClosing(evt);
			}
		});

		gLCanvas1.addGLEventListener(mGLListener);
		gLCanvas1.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				gLCanvas1MouseClicked(evt);
			}

			public void mousePressed(java.awt.event.MouseEvent evt) {
				gLCanvas1MousePressed(evt);
			}
		});

		jButton1.setText("Render");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		mCheckList = new CheckListManager(listScene);
		listScene.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				listSceneMouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(listScene);

		jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("What to render"));

		checkCars.setSelected(true);
		checkCars.setText("Cars");
		checkCars.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				checkCarsActionPerformed(evt);
			}
		});

		checkZones.setText("Zones");
		checkZones.setEnabled(false);

		checkWater.setSelected(true);
		checkWater.setText("Water");
		checkWater.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				checkWaterItemStateChanged(evt);
			}
		});

		checkMap.setSelected(true);
		checkMap.setText("Map");
		checkMap.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				checkMapItemStateChanged(evt);
			}
		});

		jCheckBox1.setText("Paths");
		jCheckBox1.setEnabled(false);

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel3Layout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								jPanel3Layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(
												jPanel3Layout.createSequentialGroup().addComponent(checkWater).addGap(18, 18, 18)
														.addComponent(checkCars).addGap(18, 18, 18).addComponent(checkMap))
										.addGroup(
												jPanel3Layout.createSequentialGroup().addComponent(checkZones).addGap(18, 18, 18)
														.addComponent(jCheckBox1))).addContainerGap(81, Short.MAX_VALUE)));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel3Layout
						.createSequentialGroup()
						.addGroup(
								jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(checkWater)
										.addComponent(checkCars).addComponent(checkMap))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(
								jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(checkZones)
										.addComponent(jCheckBox1))));

		javax.swing.GroupLayout panelRenderLayout = new javax.swing.GroupLayout(panelRender);
		panelRender.setLayout(panelRenderLayout);
		panelRenderLayout.setHorizontalGroup(panelRenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(panelRenderLayout.createSequentialGroup().addContainerGap().addComponent(jButton1).addContainerGap(205, Short.MAX_VALUE))
				.addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE));
		panelRenderLayout.setVerticalGroup(panelRenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				panelRenderLayout
						.createSequentialGroup()
						.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton1).addContainerGap()));

		listIDE.addTab("Scene", panelRender);

		listIPL.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
			public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
				listIPLValueChanged(evt);
			}
		});
		jScrollPane4.setViewportView(listIPL);

		jButton9.setText("New");
		jButton9.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton9ActionPerformed(evt);
			}
		});

		jButton10.setText("Delete");

		buttonNewIPLItem.setText("New");
		buttonNewIPLItem.setEnabled(false);
		buttonNewIPLItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonNewIPLItemActionPerformed(evt);
			}
		});

		buttonEditIPLItem.setText("Edit");
		buttonEditIPLItem.setEnabled(false);

		buttonDeleteIPLItem.setText("Delete");
		buttonDeleteIPLItem.setEnabled(false);
		buttonDeleteIPLItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonDeleteIPLItemActionPerformed(evt);
			}
		});

		listIPLItems.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				listIPLItemsMouseClicked(evt);
			}
		});
		listIPLItems.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
			public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
				listIPLItemsValueChanged(evt);
			}
		});
		jScrollPane5.setViewportView(listIPLItems);

		comboIPLType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Instances", "Garages", "Cars", "Cull", "Strbig", "LODCull",
				"Zone", "Blok" }));
		comboIPLType.setEnabled(false);
		comboIPLType.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				comboIPLTypeItemStateChanged(evt);
			}
		});

		javax.swing.GroupLayout panelIPLLayout = new javax.swing.GroupLayout(panelIPL);
		panelIPL.setLayout(panelIPLLayout);
		panelIPLLayout.setHorizontalGroup(panelIPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				panelIPLLayout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								panelIPLLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
												262, Short.MAX_VALUE)
										.addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
												262, Short.MAX_VALUE)
										.addGroup(
												panelIPLLayout.createSequentialGroup().addComponent(jButton9)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton10))
										.addGroup(
												panelIPLLayout
														.createSequentialGroup()
														.addComponent(buttonNewIPLItem, javax.swing.GroupLayout.PREFERRED_SIZE, 53,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(buttonEditIPLItem)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(buttonDeleteIPLItem)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
														.addComponent(comboIPLType, 0, 73, Short.MAX_VALUE))).addContainerGap()));
		panelIPLLayout.setVerticalGroup(panelIPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				panelIPLLayout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								panelIPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton10)
										.addComponent(jButton9))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(
								panelIPLLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(comboIPLType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(buttonNewIPLItem)
										.addComponent(buttonEditIPLItem).addComponent(buttonDeleteIPLItem))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE).addContainerGap()));

		listIDE.addTab("IPL", panelIPL);

		jList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
			public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
				jList2ValueChanged(evt);
			}
		});
		jScrollPane2.setViewportView(jList2);

		jButton3.setText("New");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jButton4.setText("Delete");

		buttonNewIDEItem.setText("New");
		buttonNewIDEItem.setEnabled(false);
		buttonNewIDEItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonNewIDEItemActionPerformed(evt);
			}
		});

		buttonDelIDEItem.setText("Delete");
		buttonDelIDEItem.setEnabled(false);
		buttonDelIDEItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonDelIDEItemActionPerformed(evt);
			}
		});

		buttonEditIDEItem.setText("Edit");
		buttonEditIDEItem.setEnabled(false);
		buttonEditIDEItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonEditIDEItemActionPerformed(evt);
			}
		});

		listIDEItems.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				listIDEItemsMouseClicked(evt);
			}
		});
		listIDEItems.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
			public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
				listIDEItemsValueChanged(evt);
			}
		});
		jScrollPane3.setViewportView(listIDEItems);

		javax.swing.GroupLayout panelIDELayout = new javax.swing.GroupLayout(panelIDE);
		panelIDE.setLayout(panelIDELayout);
		panelIDELayout.setHorizontalGroup(panelIDELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				panelIDELayout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								panelIDELayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE,
												262, Short.MAX_VALUE)
										.addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE,
												262, Short.MAX_VALUE)
										.addGroup(
												javax.swing.GroupLayout.Alignment.LEADING,
												panelIDELayout.createSequentialGroup().addComponent(jButton3)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton4))
										.addGroup(
												javax.swing.GroupLayout.Alignment.LEADING,
												panelIDELayout.createSequentialGroup().addComponent(buttonNewIDEItem)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(buttonEditIDEItem)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(buttonDelIDEItem))).addContainerGap()));
		panelIDELayout.setVerticalGroup(panelIDELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				panelIDELayout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								panelIDELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton3)
										.addComponent(jButton4))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(
								panelIDELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(buttonNewIDEItem)
										.addComponent(buttonEditIDEItem).addComponent(buttonDelIDEItem))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE).addContainerGap()));

		listIDE.addTab("IDE", panelIDE);

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Parameters"));

		labelModelName.setText("Model: ");

		labelTextureName.setText("Texture Dictionary:");

		labelLodName.setText("LOD Name: ");

		textTextureName.setEditable(false);

		textLODName.setEditable(false);

		textModelName.setEditable(false);

		buttonSelectModel.setText("...");
		buttonSelectModel.setEnabled(false);

		buttonSelectModel1.setText("...");
		buttonSelectModel1.setEnabled(false);

		buttonSelectModel2.setText("...");
		buttonSelectModel2.setEnabled(false);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel1Layout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(labelTextureName)
										.addComponent(labelLodName).addComponent(labelModelName))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(
								jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(textModelName, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
										.addComponent(textTextureName).addComponent(textLODName))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(
								jPanel1Layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(buttonSelectModel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(buttonSelectModel, javax.swing.GroupLayout.PREFERRED_SIZE, 26,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(buttonSelectModel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26,
												javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(11, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel1Layout
						.createSequentialGroup()
						.addGroup(
								jPanel1Layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(labelModelName)
										.addComponent(buttonSelectModel)
										.addComponent(textModelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(
								jPanel1Layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(labelTextureName)
										.addComponent(textTextureName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(buttonSelectModel1))
						.addGap(9, 9, 9)
						.addGroup(
								jPanel1Layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(labelLodName)
										.addComponent(textLODName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(buttonSelectModel2))));

		jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Object Placement"));

		labelPosition.setText("Position");

		labelRotation.setText("Rotation");

		spinnerRotX.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), null, null, Float.valueOf(1.0f)));
		spinnerRotX.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spinnerRotXStateChanged(evt);
			}
		});

		spinnerPosX.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), null, null, Float.valueOf(0.1f)));
		spinnerPosX.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spinnerPosXStateChanged(evt);
			}
		});

		spinnerPosY.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), null, null, Float.valueOf(1.0f)));
		spinnerPosY.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spinnerPosYStateChanged(evt);
			}
		});

		spinnerRotY.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), null, null, Float.valueOf(1.0f)));
		spinnerRotY.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spinnerRotYStateChanged(evt);
			}
		});

		spinnerPosZ.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), null, null, Float.valueOf(1.0f)));
		spinnerPosZ.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spinnerPosZStateChanged(evt);
			}
		});

		spinnerRotZ.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), null, null, Float.valueOf(1.0f)));
		spinnerRotZ.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spinnerRotZStateChanged(evt);
			}
		});

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						jPanel2Layout
								.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(labelPosition)
												.addComponent(labelRotation))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										jPanel2Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(spinnerRotX, javax.swing.GroupLayout.Alignment.TRAILING,
														javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(spinnerPosX, javax.swing.GroupLayout.PREFERRED_SIZE, 58,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										jPanel2Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(spinnerRotY, javax.swing.GroupLayout.Alignment.TRAILING,
														javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(spinnerPosY, javax.swing.GroupLayout.PREFERRED_SIZE, 58,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										jPanel2Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(spinnerRotZ, javax.swing.GroupLayout.Alignment.TRAILING,
														javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(spinnerPosZ, javax.swing.GroupLayout.PREFERRED_SIZE, 58,
														javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel2Layout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								jPanel2Layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addGroup(
												jPanel2Layout
														.createSequentialGroup()
														.addComponent(spinnerPosZ, javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(spinnerRotZ, javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(
												jPanel2Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																jPanel2Layout
																		.createSequentialGroup()
																		.addGroup(
																				jPanel2Layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.BASELINE)
																						.addComponent(labelPosition)
																						.addComponent(spinnerPosX,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.PREFERRED_SIZE))
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addGroup(
																				jPanel2Layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.BASELINE)
																						.addComponent(labelRotation)
																						.addComponent(spinnerRotX,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.PREFERRED_SIZE)))
														.addGroup(
																jPanel2Layout
																		.createSequentialGroup()
																		.addComponent(spinnerPosY, javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(spinnerRotY, javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE))))
						.addContainerGap(6, Short.MAX_VALUE)));

		jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Debug"));

		jButton6.setText("Convert IPL");
		jButton6.setEnabled(false);
		jButton6.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton6ActionPerformed(evt);
			}
		});

		jButton7.setText("Convert IDE");
		jButton7.setEnabled(false);
		jButton7.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton7ActionPerformed(evt);
			}
		});

		jButton8.setText("Print WPL");
		jButton8.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton8ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel4Layout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								jPanel4Layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(jButton6)
										.addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)).addContainerGap(150, Short.MAX_VALUE)));
		jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel4Layout.createSequentialGroup().addComponent(jButton6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton8)
						.addContainerGap(74, Short.MAX_VALUE)));

		javax.swing.GroupLayout panelMapperLayout = new javax.swing.GroupLayout(panelMapper);
		panelMapper.setLayout(panelMapperLayout);
		panelMapperLayout.setHorizontalGroup(panelMapperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				panelMapperLayout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								panelMapperLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(
												panelMapperLayout
														.createSequentialGroup()
														.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGap(2, 2, 2))
										.addGroup(
												panelMapperLayout
														.createSequentialGroup()
														.addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap())
										.addGroup(
												panelMapperLayout
														.createSequentialGroup()
														.addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()))));
		panelMapperLayout.setVerticalGroup(panelMapperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				panelMapperLayout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGap(136, 136, 136)));

		listIDE.addTab("Properties", panelMapper);

		labelFPS.setText("FPS: 0");

		labelCameraPosition.setText("DirectPosition");

		mTextFieldCameraX.setText("0.0000");
		mTextFieldCameraX.setAutoscrolls(false);
		mTextFieldCameraX.setEnabled(false);
		mTextFieldCameraX.setMaximumSize(new java.awt.Dimension(6, 20));
		mTextFieldCameraX.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				textXKeyTyped(evt);
			}
		});

		mTextFieldCameraY.setText("0.0000");
		mTextFieldCameraY.setEnabled(false);

		mTextFieldCameraZ.setText("0.0000");
		mTextFieldCameraZ.setEnabled(false);

		buttonGroup1.add(jToggleButton1);
		// jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/shaded.png"))); // NOI18N
		jToggleButton1.setSelected(true);
		jToggleButton1.setToolTipText("Shaded");
		jToggleButton1.setBorderPainted(false);
		jToggleButton1.setFocusable(false);
		// jToggleButton1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/shadedSel.png")));
		// // NOI18N

		buttonGroup1.add(jToggleButton2);
		// jToggleButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/wireframe.png"))); // NOI18N
		jToggleButton2.setToolTipText("Wireframe");
		jToggleButton2.setFocusable(false);
		// jToggleButton2.setSelectedIcon(new
		// javax.swing.ImageIcon(getClass().getResource("/Images/wireframeSel.png"))); // NOI18N
		jToggleButton2.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jToggleButton2ItemStateChanged(evt);
			}
		});

		buttonGroup1.add(jToggleButton3);
		// jToggleButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/wireframeshaded.png"))); //
		// NOI18N
		jToggleButton3.setFocusable(false);
		// jToggleButton3.setSelectedIcon(new
		// javax.swing.ImageIcon(getClass().getResource("/Images/wireframeshadedSel.png"))); // NOI18N

		// jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/browser.png"))); // NOI18N
		jButton2.setToolTipText("Resource Browser");
		jButton2.setBorder(null);
		jButton2.setFocusable(false);
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		// jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mapcleaner.png"))); // NOI18N
		jButton5.setToolTipText("Map Cleaner");
		jButton5.setBorder(null);
		jButton5.setEnabled(false);
		jButton5.setFocusable(false);
		jButton5.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton5ActionPerformed(evt);
			}
		});

		jMenu1.setText("File");

		jMenuItemSelectInstall.setText("Select install");
		jMenuItemSelectInstall.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(final ActionEvent e) {
				onSelectInstallClicked();
			}
		});
		jMenu1.add(jMenuItemSelectInstall);

		jMenuItem4.setText("Save install");
		jMenuItem4.setEnabled(false);
		jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem4ActionPerformed(evt);
			}
		});
		jMenu1.add(jMenuItem4);

		jMenuItem3.setText("Exit");
		jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem3ActionPerformed(evt);
			}
		});
		jMenu1.add(jMenuItem3);

		jMenuBar1.add(jMenu1);

		jMenu2.setText("Edit");

		jMenuItem2.setText("Resource Browser");
		jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem2ActionPerformed(evt);
			}
		});
		jMenu2.add(jMenuItem2);

		jMenuItem5.setText("Map Cleaner");
		jMenuItem5.setEnabled(false);
		jMenu2.add(jMenuItem5);

		jMenuBar1.add(jMenu2);

		jMenuTools.setText("Tools");
		jMenuToolsItemHashGenerator.setText("Hash generator");
		jMenuToolsItemHashGenerator.addActionListener(e -> new HashishGen());
		jMenuTools.add(jMenuToolsItemHashGenerator);
		jMenuBar1.add(jMenuTools);

		jMenu3.setText("Help");

		jMenuItem1.setText("About");
		jMenuItem1.addActionListener(evt -> jMenuItem1ActionPerformed(evt));
		jMenu3.add(jMenuItem1);

		jMenuBar1.add(jMenu3);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup()
						.addGroup(
								layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(
												layout.createSequentialGroup()
														.addContainerGap()
														.addComponent(jButton2)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(jButton5)
														.addGap(18, 18, 18)
														.addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 24,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 24,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 24,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(
												javax.swing.GroupLayout.Alignment.TRAILING,
												layout.createSequentialGroup()
														.addGroup(
																layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
																		.addComponent(gLCanvas1, javax.swing.GroupLayout.DEFAULT_SIZE, 715,
																				Short.MAX_VALUE)
																		.addGroup(
																				layout.createSequentialGroup()
																						.addContainerGap()
																						.addComponent(labelFPS)
																						.addGap(18, 18, 18)
																						.addComponent(labelCameraPosition)
																						.addGap(8, 8, 8)
																						.addComponent(mTextFieldCameraX,
																								javax.swing.GroupLayout.PREFERRED_SIZE, 44,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addPreferredGap(
																								javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																						.addComponent(mTextFieldCameraY,
																								javax.swing.GroupLayout.PREFERRED_SIZE, 44,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addPreferredGap(
																								javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																						.addComponent(mTextFieldCameraZ,
																								javax.swing.GroupLayout.PREFERRED_SIZE, 42,
																								javax.swing.GroupLayout.PREFERRED_SIZE)))
														.addGap(10, 10, 10))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(listIDE, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup()
						.addGroup(
								layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(jToggleButton2, 0, 0, Short.MAX_VALUE)
										.addComponent(jToggleButton3, 0, 0, Short.MAX_VALUE)
										.addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, Short.MAX_VALUE)
										.addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(
								layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(listIDE, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 570,
												Short.MAX_VALUE)
										.addComponent(gLCanvas1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE,
												570, Short.MAX_VALUE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(
								layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(labelFPS)
										.addComponent(labelCameraPosition)
										.addComponent(mTextFieldCameraZ, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(mTextFieldCameraY, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(mTextFieldCameraX, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItem1ActionPerformed
		final AboutDialog aboutDialog = new AboutDialog();
		aboutDialog.pack();
		aboutDialog.setResizable(false);
		aboutDialog.setVisible(true);
	}// GEN-LAST:event_jMenuItem1ActƒionPerformed

	private void gLCanvas1KeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_gLCanvas1KeyPressed
		if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
			switch (mFileManager.selType) {
				case Constants.pickMap:
					if (mFileManager.selParam1 != -1 && mFileManager.selParam2 != -1) {
						mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.remove(mFileManager.selParam2);
						mFileManager.mIPLFiles[mFileManager.selParam1].changed = true;
						mFileManager.updateIPLItemList(mFileManager.selParam1, mFileManager.selParam1);
					}
					break;
				default:
					System.out.println("Nothing to delete");
			}
		}
	}// GEN-LAST:event_gLCanvas1KeyPressed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		mGLListener.renderMap.reload = true;
	}// GEN-LAST:event_jButton1ActionPerformed

	private void gLCanvas1MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_gLCanvas1MouseClicked
		if (evt.getClickCount() == 2) {
			mGLListener.setPick();
		}
	}// GEN-LAST:event_gLCanvas1MouseClicked

	private void gLCanvas1MousePressed(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_gLCanvas1MousePressed
		System.out.println("Set mPosition " + evt.getX() + ", " + evt.getY());
		mGLListener.setCurrentMousePos(evt.getPoint());
	}// GEN-LAST:event_gLCanvas1MousePressed

	private void jToggleButton2ItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jToggleButton2ItemStateChanged
		mGLListener.setWireFrame(jToggleButton2.isSelected());
	}// GEN-LAST:event_jToggleButton2ItemStateChanged

	private void spinnerPosXStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spinnerPosXStateChanged
		switch (mFileManager.selType) {
			case Constants.pickMap:
				mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).position.x = (Float) spinnerPosX.getValue();
				mFileManager.mIPLFiles[mFileManager.selParam1].changed = true;
				break;
		}
	}// GEN-LAST:event_spinnerPosXStateChanged

	private void spinnerPosYStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spinnerPosYStateChanged
		switch (mFileManager.selType) {
			case Constants.pickMap:
				mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).position.y = (Float) spinnerPosY.getValue();
				mFileManager.mIPLFiles[mFileManager.selParam1].changed = true;
				break;
		}
	}// GEN-LAST:event_spinnerPosYStateChanged

	private void spinnerPosZStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spinnerPosZStateChanged
		switch (mFileManager.selType) {
			case Constants.pickMap:
				mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).position.z = (Float) spinnerPosZ.getValue();
				mFileManager.mIPLFiles[mFileManager.selParam1].changed = true;
				break;
		}
	}// GEN-LAST:event_spinnerPosZStateChanged

	private void textXKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_textXKeyTyped
		mGLListener.mCamera.mPosition.x = Float.valueOf(mTextFieldCameraX.getText());
	}// GEN-LAST:event_textXKeyTyped

	private void formWindowClosing(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowClosing
		// new SaveScreen(mFileManager, true);
	}// GEN-LAST:event_formWindowClosing

	private void checkMapItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_checkMapItemStateChanged
		mGLListener.displayMap = checkMap.isSelected();
	}// GEN-LAST:event_checkMapItemStateChanged

	private void checkWaterItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_checkWaterItemStateChanged
		mGLListener.displayWater = checkWater.isSelected();
	}// GEN-LAST:event_checkWaterItemStateChanged

	private void listIPLValueChanged(javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_listIPLValueChanged
		mFileManager.updateIPLItemList(listIPL.getSelectedIndex(), comboIPLType.getSelectedIndex());
		if (listIPL.getSelectedIndex() != -1) {
			buttonNewIPLItem.setEnabled(true);
			comboIPLType.setEnabled(true);
		} else {
			buttonNewIPLItem.setEnabled(false);
			comboIPLType.setEnabled(false);
		}
	}// GEN-LAST:event_listIPLValueChanged

	private void comboIPLTypeItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_comboIPLTypeItemStateChanged
		mFileManager.updateIPLItemList(listIPL.getSelectedIndex(), comboIPLType.getSelectedIndex());
	}// GEN-LAST:event_comboIPLTypeItemStateChanged

	private void buttonDeleteIPLItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonDeleteIPLItemActionPerformed
		switch (comboIPLType.getSelectedIndex()) {
			case 0:
				mFileManager.mIPLFiles[listIPL.getSelectedIndex()].items_inst.remove(listIPLItems.getSelectedIndex());
				break;
			case 2:
				mFileManager.mIPLFiles[listIPL.getSelectedIndex()].items_cars.remove(listIPLItems.getSelectedIndex());
				break;
		}
		mFileManager.mIPLFiles[listIPL.getSelectedIndex()].changed = true;
		mFileManager.updateIPLItemList(listIPL.getSelectedIndex(), comboIPLType.getSelectedIndex());
	}// GEN-LAST:event_buttonDeleteIPLItemActionPerformed

	private void jList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_jList2ValueChanged
		mFileManager.updateIDEItemList(jList2.getSelectedIndex(), 0);
		buttonNewIDEItem.setEnabled(true);
		buttonDelIDEItem.setEnabled(true);
	}// GEN-LAST:event_jList2ValueChanged

	private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItem2ActionPerformed
		// Browser browser = new Browser(mFileManager);
	}// GEN-LAST:event_jMenuItem2ActionPerformed

	private void listIPLItemsMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_listIPLItemsMouseClicked
		if (evt.getClickCount() == 2) {
			switch (comboIPLType.getSelectedIndex()) {
				case 0:
					mFileManager.setSelection(Constants.pickMap, listIPL.getSelectedIndex(), listIPLItems.getSelectedIndex());
					break;
				case 2:
					mFileManager.setSelection(Constants.pickCar, listIPL.getSelectedIndex(), listIPLItems.getSelectedIndex());
					break;
			}
			selectionChanged();
		}
	}// GEN-LAST:event_listIPLItemsMouseClicked

	private void listIDEItemsMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_listIDEItemsMouseClicked
		if (evt.getClickCount() == 2) {
			// new IDEForm(jList2.getSelectedIndex(), listIDEItems.getSelectedIndex(), mFileManager);
		}
	}// GEN-LAST:event_listIDEItemsMouseClicked

	private void buttonEditIDEItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonEditIDEItemActionPerformed
		// new IDEForm(jList2.getSelectedIndex(), listIDEItems.getSelectedIndex(), mFileManager);
	}// GEN-LAST:event_buttonEditIDEItemActionPerformed

	private void listIDEItemsValueChanged(javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_listIDEItemsValueChanged
		if (listIDEItems.getSelectedIndex() != -1)
			buttonEditIDEItem.setEnabled(true);
		else
			buttonEditIDEItem.setEnabled(false);
	}// GEN-LAST:event_listIDEItemsValueChanged

	private void buttonNewIDEItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonNewIDEItemActionPerformed
		// new IDEForm(jList2.getSelectedIndex(), mFileManager);
	}// GEN-LAST:event_buttonNewIDEItemActionPerformed

	private void listSceneMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_listSceneMouseClicked
		if (evt.getClickCount() == 2) {
			mGLListener.mCamera.mPosition.x = mFileManager.mIPLFiles[listScene.getSelectedIndex()].items_inst.get(0).position.x;
			mGLListener.mCamera.mPosition.z = 0 - mFileManager.mIPLFiles[listScene.getSelectedIndex()].items_inst.get(0).position.y;
			mGLListener.mCamera.mPosition.y = mFileManager.mIPLFiles[listScene.getSelectedIndex()].items_inst.get(0).position.z;
			mGLListener.mCamera.view.x = mFileManager.mIPLFiles[listScene.getSelectedIndex()].items_inst.get(0).position.x;
			mGLListener.mCamera.view.z = 0 - mFileManager.mIPLFiles[listScene.getSelectedIndex()].items_inst.get(0).position.y + 5.0f;
			mGLListener.mCamera.view.y = mFileManager.mIPLFiles[listScene.getSelectedIndex()].items_inst.get(0).position.z - 0.5f;
			mGLListener.mCamera.up.x = 0;
			mGLListener.mCamera.up.z = 0;
			mGLListener.mCamera.up.y = 1;
		}
	}// GEN-LAST:event_listSceneMouseClicked

	private void buttonNewIPLItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonNewIPLItemActionPerformed
		switch (comboIPLType.getSelectedIndex()) {
			case 0:
				// new IPLForm(mFileManager, listIPL.getSelectedIndex(), mGLListener.mCamera.view);
				// selIPL = listIPL.getSelectedIndex();
				// selItem = listIPLItems.getSelectedIndex();
				break;
			case 2:
				// new CarForm(mFileManager, listIPL.getSelectedIndex(), mGLListener.mCamera.view);
				break;
		}
	}// GEN-LAST:event_buttonNewIPLItemActionPerformed

	private void buttonDelIDEItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonDelIDEItemActionPerformed
		mFileManager.mIDEFiles[jList2.getSelectedIndex()].items_objs.remove(listIDEItems.getSelectedIndex());
		mFileManager.mIDEFiles[jList2.getSelectedIndex()].changed = true;
		System.out.println("Deleted IDE");
		mFileManager.updateIDEItemList(jList2.getSelectedIndex(), 0);
	}// GEN-LAST:event_buttonDelIDEItemActionPerformed

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
		String[] extensions = { ".ide" };
		File file = Utils.fileChooser(this, Constants.fileSave, new Filter(extensions, "IDE File", false));
		mFileManager.addNewIDE(file);
	}// GEN-LAST:event_jButton3ActionPerformed

	private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItem3ActionPerformed
		this.dispose();
	}// GEN-LAST:event_jMenuItem3ActionPerformed

	private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton9ActionPerformed
		String[] extensions = { ".wpl" };
		File file = Utils.fileChooser(this, Constants.fileSave, new Filter(extensions, "WPL File", false));
		mFileManager.addNewIPL(file);
	}// GEN-LAST:event_jButton9ActionPerformed

	private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton6ActionPerformed
		IPL place = new IPL("E:/zuid.ipl", Constants.gSA, true); // load IPL
		place.setGameType(Constants.gIV);
		for (int i = 0; i < place.items_inst.size(); i++) {
			place.items_inst.get(i).position.y -= 870;
			place.items_inst.get(i).position.x -= 600;
			place.items_inst.get(i).position.z += 1.9;
			System.out.println("Adjusting placement " + i);
		}
		place.save();
	}// GEN-LAST:event_jButton6ActionPerformed

	private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton7ActionPerformed
		IDE ide = new IDE("E:/zuid.IDE", Constants.gSA, true);
		ide.setGameType(Constants.gIV);
		ide.save();
	}// GEN-LAST:event_jButton7ActionPerformed

	private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItem4ActionPerformed
		// new SaveScreen(mFileManager, false);
	}// GEN-LAST:event_jMenuItem4ActionPerformed

	private void checkCarsActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_checkCarsActionPerformed
		mGLListener.displayCars = checkCars.isSelected();
	}// GEN-LAST:event_checkCarsActionPerformed

	private void listIPLItemsValueChanged(javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_listIPLItemsValueChanged
		if (listIPLItems.getSelectedIndex() != -1) {
			buttonEditIPLItem.setEnabled(true);
			buttonDeleteIPLItem.setEnabled(true);
		} else {
			buttonEditIPLItem.setEnabled(false);
			buttonDeleteIPLItem.setEnabled(false);
		}
	}// GEN-LAST:event_listIPLItemsValueChanged

	private void spinnerRotXStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spinnerRotXStateChanged
		switch (mFileManager.selType) {
			case Constants.pickMap:
				mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).axisAngle.x = (Float) spinnerRotX.getValue();
				mFileManager.mIPLFiles[mFileManager.selParam1].changed = true;
				break;
		}
	}// GEN-LAST:event_spinnerRotXStateChanged

	private void spinnerRotYStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spinnerRotYStateChanged
		switch (mFileManager.selType) {
			case Constants.pickMap:
				mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).axisAngle.y = (Float) spinnerRotY.getValue();
				mFileManager.mIPLFiles[mFileManager.selParam1].changed = true;
				break;
		}
	}// GEN-LAST:event_spinnerRotYStateChanged

	private void spinnerRotZStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spinnerRotZStateChanged
		switch (mFileManager.selType) {
			case Constants.pickMap:
				mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).axisAngle.z = (Float) spinnerRotZ.getValue();
				mFileManager.mIPLFiles[mFileManager.selParam1].changed = true;
				break;
		}
	}// GEN-LAST:event_spinnerRotZStateChanged

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
		// Browser browser = new Browser(mFileManager);
	}// GEN-LAST:event_jButton2ActionPerformed

	private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton5ActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jButton5ActionPerformed

	private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton8ActionPerformed
		for (int i = 0; i < mFileManager.mGTADat.ipl.size(); i++) {
			System.out.println(mFileManager.mGTADat.ipl.get(i));
		}
	}// GEN-LAST:event_jButton8ActionPerformed

	public void addHashToIni(String name) {
		long hash = HashUtils.genHash(name);
		try {
			IniEditor ini = new IniEditor();
			ini.load("hashes.ini");
			if (!ini.hasOption("Hashes", "" + name)) {
				System.out.println("Adding to ini");
				ini.set("Hashes", "" + hash, name);
				ini.save("hashes.ini");
			} else {
				System.out.println("Already exists");
			}
			ini = null;
		} catch (IOException ex) {
			Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	public void selectionChanged() {
		switch (mFileManager.selType) {
			case Constants.pickMap:
				textModelName.setText(mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).name);
				spinnerPosX.setValue(mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).position.x);
				spinnerPosY.setValue(mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).position.y);
				spinnerPosZ.setValue(mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).position.z);
				spinnerRotX.setValue(mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).axisAngle.x);
				spinnerRotY.setValue(mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).axisAngle.y);
				spinnerRotZ.setValue(mFileManager.mIPLFiles[mFileManager.selParam1].items_inst.get(mFileManager.selParam2).axisAngle.z);
				listIPL.setSelectedIndex(mFileManager.selParam1);
				listIPLItems.setSelectedIndex(mFileManager.selParam2);
				break;
			case Constants.pickWater:
				textModelName.setText("Water");
				break;
			case Constants.pickCar:
				textModelName.setText(mFileManager.mIPLFiles[mFileManager.selParam1].items_cars.get(mFileManager.selParam2).name);
				spinnerPosX.setValue(mFileManager.mIPLFiles[mFileManager.selParam1].items_cars.get(mFileManager.selParam2).position.x);
				spinnerPosY.setValue(mFileManager.mIPLFiles[mFileManager.selParam1].items_cars.get(mFileManager.selParam2).position.y);
				spinnerPosZ.setValue(mFileManager.mIPLFiles[mFileManager.selParam1].items_cars.get(mFileManager.selParam2).position.z);
				spinnerRotX.setValue(mFileManager.mIPLFiles[mFileManager.selParam1].items_cars.get(mFileManager.selParam2).rotation.x);
				spinnerRotY.setValue(mFileManager.mIPLFiles[mFileManager.selParam1].items_cars.get(mFileManager.selParam2).rotation.y);
				spinnerRotZ.setValue(mFileManager.mIPLFiles[mFileManager.selParam1].items_cars.get(mFileManager.selParam2).rotation.z);
				break;
			default:
				textModelName.setText("Unknown");
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton buttonDelIDEItem;
	private javax.swing.JButton buttonDeleteIPLItem;
	private javax.swing.JButton buttonEditIDEItem;
	private javax.swing.JButton buttonEditIPLItem;
	private javax.swing.ButtonGroup buttonGroup1;
	private javax.swing.JButton buttonNewIDEItem;
	private javax.swing.JButton buttonNewIPLItem;
	private javax.swing.JButton buttonSelectModel;
	private javax.swing.JButton buttonSelectModel1;
	private javax.swing.JButton buttonSelectModel2;
	private javax.swing.JCheckBox checkCars;
	private javax.swing.JCheckBox checkMap;
	private javax.swing.JCheckBox checkWater;
	private javax.swing.JCheckBox checkZones;
	private javax.swing.JComboBox comboIPLType;
	private GLCanvas gLCanvas1;
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton10;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton5;
	private javax.swing.JButton jButton6;
	private javax.swing.JButton jButton7;
	private javax.swing.JButton jButton8;
	private javax.swing.JButton jButton9;
	private javax.swing.JCheckBox jCheckBox1;
	private javax.swing.JList jList2;
	private javax.swing.JMenu jMenu1;
	private javax.swing.JMenu jMenu2;
	private javax.swing.JMenu jMenu3;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JMenuItem jMenuItem1;
	private javax.swing.JMenuItem jMenuItem2;
	private javax.swing.JMenuItem jMenuItem3;
	private javax.swing.JMenuItem jMenuItem4;
	private javax.swing.JMenuItem jMenuItem5;
	private JMenuItem jMenuItemSelectInstall;
	private JMenu jMenuTools;
	private JMenuItem jMenuToolsItemHashGenerator;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JScrollPane jScrollPane4;
	private javax.swing.JScrollPane jScrollPane5;
	private javax.swing.JToggleButton jToggleButton1;
	private javax.swing.JToggleButton jToggleButton2;
	private javax.swing.JToggleButton jToggleButton3;
	private javax.swing.JLabel labelCameraPosition;
	private javax.swing.JLabel labelFPS;
	private javax.swing.JLabel labelLodName;
	private javax.swing.JLabel labelModelName;
	private javax.swing.JLabel labelPosition;
	private javax.swing.JLabel labelRotation;
	private javax.swing.JLabel labelTextureName;
	private javax.swing.JTabbedPane listIDE;
	private javax.swing.JList listIDEItems;
	private javax.swing.JList listIPL;
	private javax.swing.JList listIPLItems;
	private javax.swing.JList listScene;
	private javax.swing.JPanel panelIDE;
	private javax.swing.JPanel panelIPL;
	private javax.swing.JPanel panelMapper;
	private javax.swing.JPanel panelRender;
	private javax.swing.JSpinner spinnerPosX;
	private javax.swing.JSpinner spinnerPosY;
	private javax.swing.JSpinner spinnerPosZ;
	private javax.swing.JSpinner spinnerRotX;
	private javax.swing.JSpinner spinnerRotY;
	private javax.swing.JSpinner spinnerRotZ;
	private javax.swing.JTextField textLODName;
	private javax.swing.JTextField textModelName;
	private javax.swing.JTextField textTextureName;
	private javax.swing.JTextField mTextFieldCameraX;
	private javax.swing.JTextField mTextFieldCameraY;
	private javax.swing.JTextField mTextFieldCameraZ;

	// End of variables declaration//GEN-END:variables

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(() -> {
			try {
				MainForm window = new MainForm();
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	}
}
